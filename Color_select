import javax.swing.*;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;


public class Color_select extends JFrame{

	private JButton btnOK, btnCancel, btnCor;
	private PaintPanel paintpanel;
	private JPanel panelBtn;
	private JColorChooser ch;
	private Color c;
	
	public Color_select() {
		
		this.setLayout(new GridLayout(2, 1));
		
		this.btnOK = new JButton("OK");
		this.btnCancel = new JButton("Cancel");
		this.btnCor = new JButton("Cor");		
		this.panelBtn = new JPanel();
		this.paintpanel = new PaintPanel();
		this.ch = new JColorChooser(paintpanel.getForeground());
		
		paintpanel.setBackground(Color.WHITE);
		panelBtn.setLayout(new BorderLayout());		
		panelBtn.add(btnOK, BorderLayout.NORTH);
		panelBtn.add(btnCancel, BorderLayout.WEST);
		panelBtn.add(btnCor, BorderLayout.EAST);
		panelBtn.add(ch, BorderLayout.CENTER);		
		
		btnHandler h1 = new btnHandler();
		btnOK.addActionListener(h1);
		btnCancel.addActionListener(h1);
		btnCor.addActionListener(h1);
		
		chHandler h2 = new chHandler();
		ch.getSelectionModel().addChangeListener(h2);
		
		add(paintpanel);
		add(panelBtn);
	}
	

	private class btnHandler implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent event) {
			if(event.getSource() == btnOK) {
				paintpanel.setColor(c);
			} else if(event.getSource() == btnCancel) {
				paintpanel.setColor(Color.BLACK);
				paintpanel.setBackground(Color.WHITE);
			} else if(event.getSource() == btnCor) {
				paintpanel.setBackground(c);
			}
		}
		
	}
	private class chHandler implements ChangeListener{

		@Override
		public void stateChanged(ChangeEvent event) {
			c = ch.getColor();
		}
		
	}

}

